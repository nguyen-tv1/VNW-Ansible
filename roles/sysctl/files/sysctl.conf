# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

#Disable ipv6 on all interfaces
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1

# Congestion control. Default is cubic
net.ipv4.tcp_congestion_control = htcp


# Since enabling 'SysRq' gives you physical console access extra abilities, it is recommended
# to disable it when not troubleshooting a problem or to ensure that physical console
# access is properly secured.
# Default is 16
kernel.sysrq = 0

# Controls the default maxmimum size of a mesage queue
kernel.msgmnb = 65536

# Controls the maximum size of a message, in bytes
kernel.msgmax = 65536

# Controls the maximum shared segment size, in bytes
kernel.shmmax = 68719476736

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296

########## IPv4 networking start ##############
# Send redirects, if router, but this is just server
# Disable source routing and redirects
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Accept packets with SRR option? No
net.ipv4.conf.all.accept_source_route = 0

# Accept Redirects? No, this is not router
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0

# Log packets with impossible addresses for security|to kernel log? yes
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Ignore ICMP request
net.ipv4.icmp_echo_ignore_all = 0

# Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Prevent against the common 'syn flood attack'
net.ipv4.tcp_syncookies = 1

# Enable source validation by reversed path, as specified in RFC1812
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

#Enable ExecShield protection
#kernel.exec-shield = 1
kernel.randomize_va_space = 1

# The default and maximum amount for the receive socket memory
#net.core.rmem_max=12582912

# The default and maximum amount for the send socket memory
#net.core.rmem_default=12582912

# You also need to set minimum size, initial size, and maximum size in bytes
#net.ipv4.tcp_rmem= 10240 87380 12582912
#net.ipv4.tcp_wmem= 10240 87380 12582912

# Increase Linux autotuning TCP buffer limits
# Set max to 16MB for 1GE and 32M (33554432) or 54M (56623104) for 10GE
# Don't set tcp_mem itself! Let the kernel scale it based on RAM.
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.rmem_default = 16777216
net.core.wmem_default = 16777216
net.core.optmem_max = 40960
net.ipv4.tcp_mem = 4096 87380 16777216
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216

# Turn on window scaling which can be an option to enlarge the transfer window
net.ipv4.tcp_window_scaling = 1

# The tcp_max_orphans file shows the maximal number of TCP sockets not attached to any user file handle, held by system that the kernel can support.
# If this number is exceeded orphaned connections are reset immediately and warning is printed. This limit exists only to prevent simple DoS attacks.
# Each orphan sockets eats up to 64K of unswappable memory.
net.ipv4.tcp_max_orphans = 524288

# Make room for more TIME_WAIT sockets due to more clients,
# and allow them to be reused if we run out of sockets
# Also increase the max packet backlog
# Enable timestamps as defined in RFC1323
# Set maximum number of packets, queued on the INPUT side, when the interface receives packets faster than kernel can process them.
net.core.netdev_max_backlog = 50000

# Maximum number of remembered connection requests, Defaults to 1024
#net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_syn_backlog = 40000

#net.ipv4.tcp_max_tw_buckets = 180000
net.ipv4.tcp_max_tw_buckets = 6000000

net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1
# FIN-WAIT-2 for only 5 seconds
net.ipv4.tcp_fin_timeout = 15
# One hour keepalive with fewer probes (default: 7200 & 9)
net.ipv4.tcp_keepalive_time = 15
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_keepalive_probes = 5

# Only retry creating TCP connections twice
# Minimize the time it takes for a connection attempt to fail
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syn_retries = 2

# Disable TCP slow start on idle connections
net.ipv4.tcp_slow_start_after_idle = 0

# If your servers talk UDP, also up these limits
net.ipv4.udp_rmem_min = 8192
net.ipv4.udp_wmem_min = 8192

# tells the Kernel it's ok if services bind to non-existant IP ADDR
net.ipv4.ip_nonlocal_bind = 1

# defines the size of the kernel queue for accepting new connections, Defaults to 128
#net.core.somaxconn = 4096
net.core.somaxconn = 40000

# Security
net.ipv4.tcp_timestamps = 0

# Enable select acknowledgments
net.ipv4.tcp_sack = 1

# By default, TCP saves various connection metrics in the route cache when the connection closes,
# so that connections established in the near future can use these to set initial conditions.
# Usually, this increases overall performance, but may sometimes cause performance degradation.
# If set, TCP will not cache metrics on closing connections.
net.ipv4.tcp_no_metrics_save = 0

#Increase system IP port limits
net.ipv4.ip_local_port_range = 2000 65535
# Inotify
fs.inotify.max_user_watches = 200000

# ip_conntrack: table full, dropping packet
net.nf_conntrack_max = 3000000
net.netfilter.nf_conntrack_max = 3000000
#net.netfilter.nf_conntrack_generic_timeout=60
#54000, 432000
#net.netfilter.nf_conntrack_tcp_timeout_established=54000

# reduce TIME_WAIT from the 120s default
#net.netfilter.nf_conntrack_tcp_timeout_time_wait = 15

### Oracle
#fs.suid_dumpable = 1
#fs.aio-max-nr = 1048576
#fs.file-max = 6815744
#kernel.shmall = 4194304
#kernel.shmmax = 536870912
#kernel.shmmni = 4096
#kernel.sem = 250 32000 100 128
#net.ipv4.ip_local_port_range = 9000 65500
#net.core.rmem_default = 262144

fs.file-max = 3072000
#fs.file-max = 1024000
kernel.sem = 250 32000 100 128
kernel.shmmni = 4096
kernel.shmall = 1073741824
kernel.shmmax = 4398046511104
#net.core.rmem_default = 262144
#net.core.rmem_max = 4194304
#net.core.wmem_default = 262144
#net.core.wmem_max = 1048576
fs.aio-max-nr = 1048576

